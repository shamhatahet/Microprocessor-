#include <xc.h>
#include <string.h>
#define _XTAL_FREQ 20000000

// === CONFIG BITS ===
#pragma config FOSC = HS
#pragma config WDTE = OFF
#pragma config PWRTE = ON
#pragma config BOREN = OFF
#pragma config LVP = OFF
#pragma config CPD = OFF
#pragma config WRT = OFF
#pragma config CP = OFF

// === LCD Pins ===
#define RS PORTDbits.RD0
#define EN PORTDbits.RD1
#define D4 PORTDbits.RD2
#define D5 PORTDbits.RD3
#define D6 PORTDbits.RD4
#define D7 PORTDbits.RD5

// === IO ===
#define BUZZER PORTAbits.RA0
#define GREEN_LED PORTCbits.RC3
#define RED1 PORTCbits.RC4
#define RED2 PORTCbits.RC5
#define RED3 PORTCbits.RC6
#define SERVO PORTCbits.RC2

char correct_pass[] = "2006";
char input_pass[5] = "";
char keypad[3][4] = {
    {'1', '4', '7', '*'},
    {'2', '5', '8', '0'},
    {'3', '6', '9', '#'}
};
int attempts = 0;

void Lcd_Init(); void Lcd_Cmd(char); void Lcd_Char(char); void Lcd_String(const char *);
void Lcd_Clear(); void Lcd_Set_Cursor(char, char); char Keypad_Read();
void Servo_Forward(); void Servo_Backward(); void Passive_Buzzer_Tone();
void Locked_Out_Alarm();

void main() {
    TRISA0 = 0;
    TRISC2 = 0; TRISC3 = 0; TRISC4 = 0; TRISC5 = 0; TRISC6 = 0;
    TRISD = 0x00; TRISB = 0x0F;

    PORTA = 0; PORTC = 0xFF; PORTD = 0;
    OPTION_REGbits.nRBPU = 0; ADCON1 = 0x06;
    __delay_ms(50);

    Lcd_Init(); Lcd_Clear(); Lcd_Set_Cursor(1, 1);
    Lcd_String("Enter Password:");
    RED1 = RED2 = RED3 = 1; GREEN_LED = 1;

    while (1) {
        char ch; int index = 0;
        memset(input_pass, 0, sizeof(input_pass));

        while (index < 4) {
            ch = Keypad_Read();
            if (ch != 0) {
                input_pass[index++] = ch;
                Lcd_Set_Cursor(2, index);
                Lcd_Char('*');
                while (Keypad_Read() != 0);
                __delay_ms(150);
            }
        }
        input_pass[4] = '\0';

        if (strcmp(input_pass, correct_pass) == 0) {
            Lcd_Clear();
            Lcd_Set_Cursor(1, 1);
            Lcd_String("Access Granted");
            GREEN_LED = 0; RED1 = RED2 = RED3 = 1;
            BUZZER = 1; __delay_ms(100); BUZZER = 0;

            Servo_Forward();  // Open lock

            Lcd_Clear();
            Lcd_Set_Cursor(1, 1);
            Lcd_String("Press * to lock");

            while (1) {
                char lockKey = Keypad_Read();
                if (lockKey == '*') {
                    Servo_Backward();  // Close lock
                    break;
                }
            } 

